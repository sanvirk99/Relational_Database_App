/* Delete CASCADE Operation Query */

/* Delete government officer, cascades to delete row in oversees */

/*
DELETE FROM public.goverment_officer
	WHERE goverment_id = '1237';
*/

/* Delete Complaint from complaint table, cascades to delete complaint from office_review table */

/*
DELETE FROM public.complaint
	WHERE complaint_id = '3';
*/

/* Update operation Query */

/* Change the Eye color of the suspect to green*/

/*
UPDATE public.suspect
	SET eye_colour= 'blue'
	WHERE suspect_id = '4';
*/

/* Selection Query */

/* Select police officers with badge number greater than 123458 */

/*
SELECT badge, duty_name AS officer_name
FROM public.police_officer
WHERE badge > '123458';
*/

/* Select prison cells with max capacity less than 10*/

/*
SELECT *
FROM public.prison
WHERE max_capacity < '10';
*/

/* Projection Query */

/* All the types of equipment in the database */

/*
SELECT equipment.type
FROM public.equipment;
*/

/* Names of all the police officers */

/*
SELECT duty_name AS officer_name
FROM public.police_officer;
*/

/* Join Query */

/* Names of all the suspects that are locked up in Cell no. 1 
(Join the Suspects and Locked Up table to find the name(s) of the suspect(s) in cell no. 1*/

/*
SELECT suspect.name
FROM suspect, locked_up
WHERE suspect.suspect_id = locked_up.suspect_id AND locked_up.locked_in_cell = 1;
*/

/* Birthdates of all the suspects that are locked up in Cell no. 2 
(Join the Suspects and Locked Up table to find the Birth date(s) of the suspect(s) in cell no. 2*/

/*
SELECT suspect.birth_date
FROM suspect, locked_up
WHERE suspect.suspect_id = locked_up.suspect_id AND locked_up.locked_in_cell = 2;
*/

/*Aggregation SQL Queries */

/* Number of suspects that are locked up in the cells */
/*
SELECT COUNT(*) AS total_suspects
    FROM public.locked_up;
*/

/* Number of crimes that are commited and logged into the database */
/*
SELECT COUNT(*) AS total_crimes
    FROM public.crime;
*/

/* What is the longest duration that a suspect is locked up for? */

/*
SELECT MAX(DATE_PART('day', release_date::timestamp - start_date::timestamp)) AS MaxDaysLockedUp
    FROM public.locked_up;
*/


/*Nested Aggregation with group-by */

/* Show all suspects that have a locked up duration 
which is greater than the lowest/minimum locked up duration of suspects */

/*
SELECT suspect.suspect_id, name, locked_in_cell, birth_date, 
DATE_PART('day', release_date::timestamp - start_date::timestamp) AS DaysLockedUp
FROM public.suspect, public.locked_up
WHERE (suspect.suspect_id = locked_up.suspect_id) AND (suspect.suspect_id IN
				(SELECT suspect_id
				FROM public.locked_up
				GROUP BY suspect_id
				HAVING DATE_PART('day', release_date::timestamp - start_date::timestamp) 
				> (SELECT MIN(DATE_PART('day', release_date::timestamp - start_date::timestamp))
					FROM public.locked_up))); 
*/


/* Show all suspects that have a locked up duration 
which is greater than the average locked up duration of suspects*/

/*
SELECT suspect.suspect_id, name, locked_in_cell, birth_date, 
DATE_PART('day', release_date::timestamp - start_date::timestamp) AS DaysLockedUp
FROM public.suspect, public.locked_up
WHERE (suspect.suspect_id = locked_up.suspect_id) AND (suspect.suspect_id IN
				(SELECT suspect_id
				FROM public.locked_up
				GROUP BY suspect_id
				HAVING DATE_PART('day', release_date::timestamp - start_date::timestamp) 
				 > (SELECT AVG(DATE_PART('day', release_date::timestamp - start_date::timestamp))
					FROM public.locked_up)));
*/


--DIVISION Query
--Find the Checkout Officer(s) badge no. and name who have checked out all the different equipments
/*
SELECT DISTINCT checkout_officer as badge_no, duty_name as officer_name
FROM public.equipment_checkout, public.police_officer
WHERE equipment_checkout.checkout_officer = police_officer.badge AND checkout_officer NOT IN (SELECT checkout_officer
							   FROM ((SELECT checkout_officer, equipment_id
									 FROM (SELECT equipment.equipment_id
										  FROM public.equipment) as equip
									 cross join (SELECT DISTINCT checkout_officer
												 FROM public.equipment_checkout) as officer)
									EXCEPT 
									(SELECT checkout_officer, equipment_id
									 FROM public.equipment_checkout)) as checkedout);
*/
--Finding the police officers who have investigated all crime
/*
select police.badge, police.duty_name from police_officer police where not exists
        (select * from crime where not exists
        (select investigates.crime_id from investigates where
        investigates.crime_id = crime.crime_id and investigates.officer = police.badge));
*/

--Triggers Queries

--Query that showcases the height error trigger. Height should be <999 cm
/*
INSERT INTO public.driver_licence(
	driver_l, name, birth_date, height_cm, eye_colour, address)
	VALUES  ('9999999','Kavi Bakshi', '2000-06-08','1601','brown','456, Ash ST, British Columbia(BC), V5X 2C1');
*/

--Query that showcases the Driver license number error, driver license number should be >= length 7
/*
INSERT INTO public.driver_licence(
	driver_l, name, birth_date, height_cm, eye_colour, address)
	VALUES  ('67','Kavi Bakshi', '2000-06-08','160','brown','456, Ash ST, British Columbia(BC), V5X 2C1');
*/
